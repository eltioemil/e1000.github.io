name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Build Jekyll Site
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Check Jekyll configuration
      run: bundle exec jekyll doctor

    - name: Build Jekyll site
      run: bundle exec jekyll build --verbose
      env:
        JEKYLL_ENV: production

    - name: Test HTML output
      uses: chabad360/htmlproofer@master
      with:
        directory: "./_site"
        arguments: --disable-external --check-html --allow-hash-href --check-favicon --check-opengraph

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jekyll-site
        path: _site/
        retention-days: 7

  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Build Jekyll site
      run: |
        bundle install
        bundle exec jekyll build

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Pa11y
      run: |
        npm install -g pa11y pa11y-ci

    - name: Serve site locally
      run: |
        bundle exec jekyll serve --detach --port 4000
        sleep 5

    - name: Run accessibility tests
      run: |
        pa11y-ci --sitemap http://localhost:4000/sitemap.xml \
          --standard WCAG2AA \
          --reporter cli

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Build and serve Jekyll site
      run: |
        bundle install
        bundle exec jekyll build
        bundle exec jekyll serve --detach --port 4000
        sleep 5

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:4000
          http://localhost:4000/cv/
          http://localhost:4000/about/
          http://localhost:4000/projects/
          http://localhost:4000/cookies/
        configPath: './.github/lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Build Jekyll site
      run: |
        bundle install
        bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      env:
        JEKYLL_ENV: production

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
